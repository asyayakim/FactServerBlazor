@page "/uselessfacts"
@using FactServerBlazor.Components.Config
@inject HttpClient Http
@rendermode InteractiveServer
@inject Microsoft.Extensions.Options.IOptions<CloudflareAi> CloudflareConfig

<PageTitle>Random Useless Facts</PageTitle>

<h1>Random Useless Facts</h1>

@if (_fact == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>@_fact</p>
    @if (!string.IsNullOrEmpty(_image))
    {
        <img src="data:image/png;base64,@_image" alt="Generated image" style="max-width:400px;" />

    }
    <button class="btn btn-primary" @onclick="LoadFact" style="margin-top: 15px;">Get Another Fact</button>
}

@code {
    private string? _fact;
    private string? _image;

    protected override async Task OnInitializedAsync()
    {
        await LoadFact();
    }

    private async Task LoadFact()
    {
        try
        {
            var urlFact = "https://uselessfacts.jsph.pl/random.json";
            var factResponse = await Http.GetFromJsonAsync<UselessFact>(urlFact);

            if (factResponse != null)
            {
                _fact = factResponse.Text;
                var requestBody = new { prompt = _fact };
                var accountId = CloudflareConfig.Value.AccountId;
                var apiToken = CloudflareConfig.Value.ApiToken;
                using var request = new HttpRequestMessage(
                    HttpMethod.Post,
                    $"https://api.cloudflare.com/client/v4/accounts/{accountId}/ai/run/@cf/lykon/dreamshaper-8-lcm")
                {
                    Content = JsonContent.Create(requestBody)
                }; 
                request.Headers.Authorization =
                    new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", apiToken);

                var response = await Http.SendAsync(request);
                response.EnsureSuccessStatusCode();

                var bytes = await response.Content.ReadAsByteArrayAsync();
                _image = Convert.ToBase64String(bytes);
            }
        }
        catch (Exception ex)
        {
            _fact = $"Could not load fact: {ex.Message}";
            _image = null;
        }
    }

    private class UselessFact
    {
        public string Id { get; set; } = string.Empty;
        public string Text { get; set; } = string.Empty;
    }

}